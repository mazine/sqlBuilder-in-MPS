package mazin.sqlBuilder.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.BaseConcept;
import jetbrains.mps.smodel.SNode;
import java.util.Iterator;
import java.util.List;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class FromBlock extends BaseConcept {
  public static final String concept = "mazin.sqlBuilder.structure.FromBlock";
  public static final String TABLE_REFERENCE = "tableReference";

  public FromBlock(SNode node) {
    super(node);
  }

  public int getTableReferencesCount() {
    return this.getChildCount(FromBlock.TABLE_REFERENCE);
  }

  public Iterator<TableReference> tableReferences() {
    return this.children(TableReference.class, FromBlock.TABLE_REFERENCE);
  }

  public List<TableReference> getTableReferences() {
    return this.getChildren(TableReference.class, FromBlock.TABLE_REFERENCE);
  }

  public void addTableReference(TableReference node) {
    this.addChild(FromBlock.TABLE_REFERENCE, node);
  }

  public void insertTableReference(TableReference prev, TableReference node) {
    this.insertChild(prev, FromBlock.TABLE_REFERENCE, node);
  }

  public static FromBlock newInstance(SModel sm, boolean init) {
    return (FromBlock) SModelUtil_new.instantiateConceptDeclaration("mazin.sqlBuilder.structure.FromBlock", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static FromBlock newInstance(SModel sm) {
    return FromBlock.newInstance(sm, false);
  }
}
